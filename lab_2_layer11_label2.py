{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-09-24T12:55:33.955332Z\",\"iopub.execute_input\":\"2023-09-24T12:55:33.955714Z\",\"iopub.status.idle\":\"2023-09-24T12:55:35.853561Z\",\"shell.execute_reply.started\":\"2023-09-24T12:55:33.955684Z\",\"shell.execute_reply\":\"2023-09-24T12:55:35.852120Z\"}}\nimport pandas as pd\nimport numpy as np\nfrom pandas import Series\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.decomposition import PCA\nfrom sklearn.metrics import f1_score\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-09-24T12:55:36.950984Z\",\"iopub.execute_input\":\"2023-09-24T12:55:36.951529Z\",\"iopub.status.idle\":\"2023-09-24T12:55:48.759205Z\",\"shell.execute_reply.started\":\"2023-09-24T12:55:36.951494Z\",\"shell.execute_reply\":\"2023-09-24T12:55:48.758009Z\"}}\ntrain_data_frame = pd.read_csv('/kaggle/input/layer11/train.csv')\nvalid_data_frame = pd.read_csv('/kaggle/input/layer11/valid.csv')\ntest_data_frame = pd.read_csv('/kaggle/input/layer11/test.csv')\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-09-24T12:55:48.760993Z\",\"iopub.execute_input\":\"2023-09-24T12:55:48.761301Z\",\"iopub.status.idle\":\"2023-09-24T12:55:48.770684Z\",\"shell.execute_reply.started\":\"2023-09-24T12:55:48.761273Z\",\"shell.execute_reply\":\"2023-09-24T12:55:48.769528Z\"}}\ntrain_data_frame.shape\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-09-24T12:55:48.771851Z\",\"iopub.execute_input\":\"2023-09-24T12:55:48.772154Z\",\"iopub.status.idle\":\"2023-09-24T12:55:48.814660Z\",\"shell.execute_reply.started\":\"2023-09-24T12:55:48.772128Z\",\"shell.execute_reply\":\"2023-09-24T12:55:48.813496Z\"}}\ntrain_data_frame.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-09-24T08:39:22.908126Z\",\"iopub.execute_input\":\"2023-09-24T08:39:22.909251Z\",\"iopub.status.idle\":\"2023-09-24T08:39:22.948146Z\",\"shell.execute_reply.started\":\"2023-09-24T08:39:22.909203Z\",\"shell.execute_reply\":\"2023-09-24T08:39:22.947136Z\"}}\ntest_data_frame.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-09-24T12:55:48.817037Z\",\"iopub.execute_input\":\"2023-09-24T12:55:48.817407Z\",\"iopub.status.idle\":\"2023-09-24T12:55:48.854163Z\",\"shell.execute_reply.started\":\"2023-09-24T12:55:48.817376Z\",\"shell.execute_reply\":\"2023-09-24T12:55:48.852944Z\"}}\nmissing_cols = train_data_frame.columns[train_data_frame.isnull().any()]\nmissing_counts = train_data_frame[missing_cols].isnull().sum()\n\nprint('Missing Columns and Counts')\nfor column in missing_cols:\n    print( str(column) +' : '+ str(missing_counts[column]))\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-09-24T12:55:48.855601Z\",\"iopub.execute_input\":\"2023-09-24T12:55:48.858115Z\",\"iopub.status.idle\":\"2023-09-24T12:55:48.933668Z\",\"shell.execute_reply.started\":\"2023-09-24T12:55:48.858079Z\",\"shell.execute_reply\":\"2023-09-24T12:55:48.932552Z\"}}\ntrain_data = train_data_frame.copy()\nvalid_data = valid_data_frame.copy()\ntest_data = test_data_frame.copy()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-09-24T12:55:48.935129Z\",\"iopub.execute_input\":\"2023-09-24T12:55:48.935970Z\",\"iopub.status.idle\":\"2023-09-24T12:55:51.638243Z\",\"shell.execute_reply.started\":\"2023-09-24T12:55:48.935929Z\",\"shell.execute_reply\":\"2023-09-24T12:55:51.637015Z\"}}\ntrain_data_frame.describe()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-09-24T12:55:51.721132Z\",\"iopub.execute_input\":\"2023-09-24T12:55:51.721578Z\",\"iopub.status.idle\":\"2023-09-24T12:55:56.713943Z\",\"shell.execute_reply.started\":\"2023-09-24T12:55:51.721542Z\",\"shell.execute_reply\":\"2023-09-24T12:55:56.713058Z\"}}\nfrom sklearn.preprocessing import RobustScaler # eliminate outliers\n\nXtrain = {}\nytrain = {}\n\nXvalid = {}\nyvalid = {}\n\nXtest = {}\nytest = {}\n\n#create dictionaries for each label\nfor target_label in ['label_1','label_2','label_3','label_4']:\n\n  if target_label == \"label_2\":\n    train = train_data_frame[train_data_frame['label_2'].notna()]\n    valid = valid_data_frame[valid_data_frame['label_2'].notna()]\n  else:\n    train = train_data_frame\n    valid = valid_data_frame\n\n  test = test_data_frame\n\n  scaler = RobustScaler()\n\n  Xtrain[target_label] = pd.DataFrame(scaler.fit_transform(train.drop(['label_1','label_2','label_3','label_4'], axis=1)), columns=[f'feature_{i}' for i in range(1,769)])\n  ytrain[target_label] = train[target_label]\n\n  Xvalid[target_label] = pd.DataFrame(scaler.transform(valid.drop(['label_1','label_2','label_3','label_4'], axis=1)), columns=[f'feature_{i}' for i in range(1,769)])\n  yvalid  [target_label] = valid[target_label]\n\n  Xtest[target_label] = pd.DataFrame(scaler.transform(test.drop([\"ID\"],axis=1)), columns=[f'feature_{i}' for i in range(1,769)])\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-09-24T12:55:56.715862Z\",\"iopub.execute_input\":\"2023-09-24T12:55:56.716915Z\",\"iopub.status.idle\":\"2023-09-24T12:55:56.793743Z\",\"shell.execute_reply.started\":\"2023-09-24T12:55:56.716868Z\",\"shell.execute_reply\":\"2023-09-24T12:55:56.792607Z\"}}\nXtrain_data_frame = Xtrain['label_2'].copy()\nytrain_data_frame = ytrain['label_2'].copy()\n\nXvalid_data_frame = Xvalid['label_2'].copy()\nyvalid_data_frame = yvalid['label_2'].copy()\n\nXtest_data_frame = Xtest['label_2'].copy()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-09-24T12:55:59.573348Z\",\"iopub.execute_input\":\"2023-09-24T12:55:59.573744Z\",\"iopub.status.idle\":\"2023-09-24T13:21:39.727460Z\",\"shell.execute_reply.started\":\"2023-09-24T12:55:59.573711Z\",\"shell.execute_reply\":\"2023-09-24T13:21:39.726306Z\"}}\nfrom sklearn.svm import SVC\nfrom sklearn.model_selection import cross_val_score, KFold\n\n# Perform cross-validation\nscores = cross_val_score(SVC(), Xtrain_data_frame, ytrain_data_frame, cv=5, scoring='accuracy')\n\nmean_accuracy = scores.mean()\nstd_accuracy = scores.std()\n\n# Print the cross-validation scores\nprint('Support Vector Machines')\nprint('\\n')\nprint(\"Cross-validation scores:\", scores)\nprint(f\"Mean Accuracy: {mean_accuracy:.2f}\")\nprint(f\"Standard Deviation: {std_accuracy:.2f}\")\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-09-24T13:21:39.729381Z\",\"iopub.execute_input\":\"2023-09-24T13:21:39.729861Z\",\"iopub.status.idle\":\"2023-09-24T13:21:43.538388Z\",\"shell.execute_reply.started\":\"2023-09-24T13:21:39.729829Z\",\"shell.execute_reply\":\"2023-09-24T13:21:43.536824Z\"}}\nfrom sklearn.decomposition import PCA\n\npca = PCA(n_components=0.975, svd_solver='full')\npca.fit(Xtrain_data_frame)\nXtrain_data_frame_pca = pd.DataFrame(pca.transform(Xtrain_data_frame))\nXvalid_data_frame_pca = pd.DataFrame(pca.transform(Xvalid_data_frame))\nXtest_data_frame_pca = pd.DataFrame(pca.transform(Xtest_data_frame))\nprint('Shape after PCA: ',Xtrain_data_frame_pca.shape)\n\n# %% [markdown]\n# # SVM\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-09-24T13:46:18.235123Z\",\"iopub.execute_input\":\"2023-09-24T13:46:18.235614Z\",\"iopub.status.idle\":\"2023-09-24T13:53:02.099883Z\",\"shell.execute_reply.started\":\"2023-09-24T13:46:18.235577Z\",\"shell.execute_reply\":\"2023-09-24T13:53:02.098566Z\"}}\nfrom sklearn import svm\nfrom sklearn import metrics\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\n\nclassifier = svm.SVC(kernel='linear', C=1)\n\nclassifier.fit(Xtrain_data_frame_pca, ytrain_data_frame)\n\nyvalid_prediction = classifier.predict(Xvalid_data_frame_pca)\n\nprint(\"acc_score: \",metrics.accuracy_score(yvalid_data_frame, yvalid_prediction))\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-09-24T14:07:39.197201Z\",\"iopub.execute_input\":\"2023-09-24T14:07:39.197658Z\"}}\nfrom sklearn.svm import SVC\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom scipy.stats import uniform, randint\nimport numpy as np\n\nparam_dist = {\n    'C': [100,10,1,0,0.1,0.01],\n    'kernel': ['rbf','linear','poly','sigmoid'],\n    'gamma': ['scale','auto'],\n    'degree': [1,2,3,4],\n    'class_weight' : ['none','balanced']\n}\n\nsvm = SVC()\n\nrandom_search = RandomizedSearchCV(\n    svm, param_distributions=param_dist, n_iter=10, cv=5, n_jobs=-1, random_state=42, scoring='accuracy'\n)\n\nrandom_search.fit(Xtrain_data_frame_pca, ytrain_data_frame)\n\nbest_params = random_search.best_params_\nbest_model = random_search.best_estimator_\n\nprint(\"best parameters:\", best_params)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-09-24T13:53:02.102603Z\",\"iopub.execute_input\":\"2023-09-24T13:53:02.103129Z\",\"iopub.status.idle\":\"2023-09-24T13:54:24.462922Z\",\"shell.execute_reply.started\":\"2023-09-24T13:53:02.103082Z\",\"shell.execute_reply\":\"2023-09-24T13:54:24.461731Z\"}}\nfrom sklearn import svm\n\nclassifier = svm.SVC(kernel='rbf', C=100, gamma='scale', degree=4, class_weight='balanced')\n\nclassifier.fit(Xtrain_data_frame_pca, ytrain_data_frame)\n\nyvalid_prediction = classifier.predict(Xvalid_data_frame_pca)\n\nprint(\"acc_score: \",metrics.accuracy_score(yvalid_data_frame, yvalid_prediction))\n\nytest_predicticon_after_pca = classifier.predict(Xtest_data_frame_pca)\n\n# %% [markdown]\n# # **Random Forest**\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-09-24T13:54:24.464475Z\",\"iopub.execute_input\":\"2023-09-24T13:54:24.464850Z\",\"iopub.status.idle\":\"2023-09-24T13:56:29.534693Z\",\"shell.execute_reply.started\":\"2023-09-24T13:54:24.464819Z\",\"shell.execute_reply\":\"2023-09-24T13:56:29.533725Z\"}}\nfrom sklearn.ensemble import RandomForestClassifier\n\nclassifier = RandomForestClassifier(n_estimators=100, random_state=42)\n\nclassifier.fit(Xtrain_data_frame, ytrain_data_frame)\n\nyvalid_prediction = classifier.predict(Xvalid_data_frame)\n\nprint(\"accuracy_score: \",metrics.accuracy_score(yvalid_data_frame, yvalid_prediction))\n\ny_test_pred = classifier.predict(Xtest_data_frame)\n\n# %% [markdown]\n# # CSV Creation\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-09-24T13:56:29.537121Z\",\"iopub.execute_input\":\"2023-09-24T13:56:29.538227Z\",\"iopub.status.idle\":\"2023-09-24T13:56:29.546084Z\",\"shell.execute_reply.started\":\"2023-09-24T13:56:29.538175Z\",\"shell.execute_reply\":\"2023-09-24T13:56:29.544863Z\"}}\noutput_data_frame=pd.DataFrame(columns=[\"ID\",\"label_1\",\"label_2\",\"label_3\",\"label_4\"])\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-09-24T14:01:27.274627Z\",\"iopub.execute_input\":\"2023-09-24T14:01:27.275042Z\",\"iopub.status.idle\":\"2023-09-24T14:01:27.282128Z\",\"shell.execute_reply.started\":\"2023-09-24T14:01:27.275009Z\",\"shell.execute_reply\":\"2023-09-24T14:01:27.280715Z\"}}\nIDs = list(i for i in range(1, len(test_data_frame)+1))\noutput_data_frame[\"ID\"] = IDs\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-09-24T14:01:34.005743Z\",\"iopub.execute_input\":\"2023-09-24T14:01:34.006136Z\",\"iopub.status.idle\":\"2023-09-24T14:01:34.011974Z\",\"shell.execute_reply.started\":\"2023-09-24T14:01:34.006107Z\",\"shell.execute_reply\":\"2023-09-24T14:01:34.010745Z\"}}\noutput_data_frame[\"label_2\"] = ytest_predicticon_after_pca\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-09-24T14:01:35.956709Z\",\"iopub.execute_input\":\"2023-09-24T14:01:35.957207Z\",\"iopub.status.idle\":\"2023-09-24T14:01:35.981305Z\",\"shell.execute_reply.started\":\"2023-09-24T14:01:35.957169Z\",\"shell.execute_reply\":\"2023-09-24T14:01:35.980155Z\"}}\noutput_data_frame\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-09-24T14:01:48.671889Z\",\"iopub.execute_input\":\"2023-09-24T14:01:48.672285Z\",\"iopub.status.idle\":\"2023-09-24T14:01:48.684655Z\",\"shell.execute_reply.started\":\"2023-09-24T14:01:48.672256Z\",\"shell.execute_reply\":\"2023-09-24T14:01:48.683280Z\"}}\noutput_data_frame.to_csv('/kaggle/working/output.csv',index=False)\n\n# %% [code]\n","metadata":{"_uuid":"9797c148-f9d3-4b22-9e3e-f65afc1ee92a","_cell_guid":"e34ea3ed-856a-4143-be00-a15a9d544de7","collapsed":false,"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]}]}